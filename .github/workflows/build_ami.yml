#Workflow name
name: Build AMI Image
on: [push]
jobs:
  build_jar:
    name: Build jar file
    runs-on: ubuntu-latest
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
      #Build jar file
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
  build_image:
    name: Build image
    runs-on: ubuntu-latest
    needs:  build_jar
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: Package
          path: staging
#      - name: Generate AMI
#        uses: hashicorp/packer-github-actions@master
#        with:
#          command: build
#          arguments: "-var-file=.github/workflows/vars.json"
#          target: .github/workflows/ami.json
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
#          PACKER_LOG: 1
#          WEB_PATH: staging/web_spring.jar
      - name: Build Deployment Artifact
        run: |
          mkdir codedeploy_artifact
          zip -r web_service.zip staging/web_spring.jar codedeploy/* appspec.yml
          mv web_service.zip codedeploy_artifact/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Push to s3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.CODEDEPLOY_BUCKET }}
      # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          output=$(aws deploy create-deployment \
           --application-name csye6225-webapp \
           --deployment-config-name CodeDeployDefault.AllAtOnce \
           --deployment-group-name csye6225-webapp-deployment \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ secrets.CODEDEPLOY_BUCKET }},key=web_service.zip,bundleType=zip \
           --region us-east-1 \
           --output json)
          echo $output

